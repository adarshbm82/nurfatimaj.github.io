<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Nurfatima Jandarova</title>
    <link>https://nurfatimaj.com/project/</link>
      <atom:link href="https://nurfatimaj.com/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 25 Mar 2020 15:00:08 +0100</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Projects</title>
      <link>https://nurfatimaj.com/project/</link>
    </image>
    
    <item>
      <title>Covid-19 in Italy in graphs</title>
      <link>https://nurfatimaj.com/project/covid-19/</link>
      <pubDate>Wed, 25 Mar 2020 15:00:08 +0100</pubDate>
      <guid>https://nurfatimaj.com/project/covid-19/</guid>
      <description>
&lt;script src=&#34;https://nurfatimaj.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Dataset source: &lt;a href=&#34;https://github.com/pcm-dpc/COVID-19&#34;&gt;github repository of the Department of Civil Protection&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;setup&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(lubridate)

data_file &amp;lt;- &amp;#39;COVID-19/dati-regioni/dpc-covid19-ita-regioni.csv&amp;#39;

df &amp;lt;- read_csv(data_file)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also helpful to reorder the regions based on north-south scale.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% mutate(distance = sqrt(lat^2 + long^2),
                    regions = fct_reorder(denominazione_regione, desc(distance)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the hour information is useless, letâ€™s remove it&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% mutate(date = date(data)) %&amp;gt;% select(-data)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And some settings for the plots&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_set(theme_minimal())
theme_update(legend.position = &amp;#39;bottom&amp;#39;)
options(ggplot2.continuous.colour = &amp;#39;Spectral&amp;#39;)
options(ggplot2.continuous.fill = &amp;#39;Spectral&amp;#39;)
myColourPalette &amp;lt;- c(&amp;#39;#67001f&amp;#39;,&amp;#39;#b2182b&amp;#39;,&amp;#39;#d6604d&amp;#39;,&amp;#39;#f4a582&amp;#39;,&amp;#39;#fddbc7&amp;#39;,&amp;#39;#f7f7f7&amp;#39;,&amp;#39;#d1e5f0&amp;#39;,&amp;#39;#92c5de&amp;#39;,&amp;#39;#4393c3&amp;#39;,&amp;#39;#2166ac&amp;#39;,
                     &amp;#39;#053061&amp;#39;, &amp;#39;white&amp;#39;, &amp;#39;#40004b&amp;#39;,&amp;#39;#762a83&amp;#39;,&amp;#39;#9970ab&amp;#39;,&amp;#39;#c2a5cf&amp;#39;,&amp;#39;#e7d4e8&amp;#39;,&amp;#39;#f7f7f7&amp;#39;,&amp;#39;#d9f0d3&amp;#39;,&amp;#39;#a6dba0&amp;#39;,
                     &amp;#39;#5aae61&amp;#39;,&amp;#39;#1b7837&amp;#39;,&amp;#39;#00441b&amp;#39;) #from colorbrewer2.org&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plots&lt;/h2&gt;
&lt;div id=&#34;testing-activity-and-new-cases&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Testing activity and new cases&lt;/h3&gt;
&lt;p&gt;If we were able to test everyone in the population, the only thing we needed to do to get a sense of infection rate is to divide number of positive cases by the population. Unfortunately, there are not enough tests. The capacity to identify confirm cases is limited by the testing capacity; therefore, it helps to look at both testing and positive cases simultaneously, whether in absolute or relative terms.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% select(date, regions, tamponi, nuovi_attualmente_positivi) %&amp;gt;%
  group_by(regions) %&amp;gt;%
  arrange(date) %&amp;gt;%
  mutate(new_tests = tamponi - lag(tamponi, 1)) %&amp;gt;%
  ungroup() %&amp;gt;% select(-tamponi) %&amp;gt;%
  gather(key = &amp;#39;variable&amp;#39;, value = &amp;#39;value&amp;#39;, -regions, -date) %&amp;gt;%
  mutate(variable = ifelse(variable == &amp;#39;new_tests&amp;#39;, &amp;#39;New tests&amp;#39;, &amp;#39;New positive cases&amp;#39;)) %&amp;gt;%
  ggplot(., aes(x = date, y = value/1000, colour = variable)) + geom_point() + geom_line() +
  facet_wrap(~regions, scales = &amp;#39;free_y&amp;#39;) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = &amp;#39;Date&amp;#39;, y = &amp;#39;thousands&amp;#39;, colour = &amp;#39;&amp;#39;) +
  scale_colour_brewer(palette = &amp;#39;Set1&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 21 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 row(s) containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://nurfatimaj.com/project/covid-19/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If random subset of population was tested for the virus, then dividing the number of positive cases by the number of people tested would have also given a good statistic for infection rate.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% mutate(positive_share = totale_attualmente_positivi/tamponi) %&amp;gt;%
  ggplot(., aes(x = date, y = positive_share*100, colour = &amp;#39;Positive cases as a share of total tested&amp;#39;)) +
  geom_point() + geom_line() +
  facet_wrap(~regions, scales = &amp;#39;free_y&amp;#39;) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = &amp;#39;Date&amp;#39;, y = &amp;#39;%&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 15 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://nurfatimaj.com/project/covid-19/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, tests are unlikely to have been given randomly, giving rise to selection issues. When we see that positive cases are on the rise (even if divided by the total number of people tested), this could be that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;more people are getting infected, or&lt;/li&gt;
&lt;li&gt;tests are given to those most likely to have the virus.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;death-rate-and-new-death-cases&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Death rate and new death cases&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% mutate(death_rate = deceduti/totale_casi) %&amp;gt;%
  ggplot(., aes(x = date, y = death_rate*100, colour = &amp;#39;Death rate&amp;#39;)) + geom_point() + geom_line() +
  facet_wrap(~regions, scales = &amp;#39;fixed&amp;#39;) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = &amp;#39;Date&amp;#39;, y = &amp;#39;%&amp;#39;, colour = &amp;#39;&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 73 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 row(s) containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://nurfatimaj.com/project/covid-19/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% group_by(regions) %&amp;gt;% arrange(date) %&amp;gt;%
  mutate(new_death = deceduti - lag(deceduti, 1)) %&amp;gt;%
  ungroup() %&amp;gt;%
  ggplot(., aes(x = date, y = new_death, fill = regions)) + geom_bar(position = &amp;#39;stack&amp;#39;, stat = &amp;#39;identity&amp;#39;) +
  scale_fill_manual(values = myColourPalette) +
  labs(x = &amp;#39;Date&amp;#39;, y = &amp;#39;New death cases&amp;#39;, fill = &amp;#39;Regions&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 21 rows containing missing values (position_stack).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://nurfatimaj.com/project/covid-19/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggsave(filename = &amp;#39;featured.png&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Saving 7 x 5 in image&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 21 rows containing missing values (position_stack).&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;timeline-on-a-map&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Timeline on a map&lt;/h3&gt;
&lt;p&gt;To view the timeline of death_rate on a map, I need to create the indicator first. There are some observations where both number of deaths and total cases are 0, resulting in NaN death rate. I substitute these with 0.&lt;/p&gt;
&lt;p&gt;The code for interactive animated map is borrowed from&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/leaflet/shiny.html&#34;&gt;Using Leaflet with Shiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.brettory.com/2018/02/embedding-a-shiny-app-in-blogdown/&#34;&gt;Embedding a shiny app in blogdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;shinyApp(
  bootstrapPage(
    tags$style(type = &amp;quot;text/css&amp;quot;, &amp;quot;html, body {width:100%;height:100%; background:rgb(255,255,255)}&amp;quot;),
    leafletOutput(&amp;quot;map&amp;quot;, width = &amp;quot;100%&amp;quot;, height = &amp;quot;100%&amp;quot;),
    absolutePanel(top = 10, right = 10,
                  sliderInput(&amp;quot;range&amp;quot;, &amp;quot;Date&amp;quot;, 
                              min = min(df$date), 
                              max = max(df$date),
                              value = max(df$date), 
                              step = 1, 
                              animate = TRUE), 
                  selectInput(&amp;quot;colors&amp;quot;, &amp;quot;Color Scheme&amp;quot;,
                              #rownames(subset(brewer.pal.info, category %in% c(&amp;quot;seq&amp;quot;, &amp;quot;div&amp;quot;)))
                              c(&amp;#39;Spectral&amp;#39;, &amp;#39;RdBu&amp;#39;, &amp;#39;Blues&amp;#39;, &amp;#39;Greens&amp;#39;, &amp;#39;Reds&amp;#39;)),
                  checkboxInput(&amp;quot;legend&amp;quot;, &amp;quot;Show legend&amp;quot;, TRUE))), 
  server &amp;lt;- function(input, output) {
    #stuff in server
    filteredData &amp;lt;- reactive({
      df[df$date == input$range[1], ]
    })
    
    # This reactive expression represents the palette function,
    # which changes as the user makes selections in UI.
    colorpal &amp;lt;- reactive({
      colorNumeric(input$colors, df$death_rate)
    })
    
    output$map &amp;lt;- renderLeaflet({
      # Use leaflet() here, and only include aspects of the map that
      # won&amp;#39;t need to change dynamically (at least, not unless the
      # entire map is being torn down and recreated).
      leaflet(df) %&amp;gt;% addTiles() %&amp;gt;%
        addProviderTiles(providers$CartoDB.Positron) %&amp;gt;% 
        fitBounds(~min(long), ~min(lat), ~max(long), ~max(lat))
    })
    
    # Incremental changes to the map (in this case, replacing the
    # circles when a new color is chosen) should be performed in
    # an observer. Each independent set of things that can change
    # should be managed in its own observer.
    observe({
      pal &amp;lt;- colorpal()
      
      leafletProxy(&amp;quot;map&amp;quot;, data = filteredData()) %&amp;gt;%
        clearMarkers() %&amp;gt;%
        addCircleMarkers(lng = ~long, lat = ~lat, 
                         radius = ~death_rate, 
                         color = ~pal(death_rate), 
                         popup = ~paste(death_rate))
    })
    
    # Use a separate observer to recreate the legend as needed.
    observe({
      proxy &amp;lt;- leafletProxy(&amp;quot;map&amp;quot;, data = df)
      
      # Remove any existing legend, and only if the legend is
      # enabled, create a new one.
      proxy %&amp;gt;% clearControls()
      if (input$legend) {
        pal &amp;lt;- colorpal()
        proxy %&amp;gt;% addLegend(position = &amp;quot;bottomright&amp;quot;, pal = pal, values = ~death_rate)
      }
    })
    
  },
  options = list(height = 500, width = &amp;#39;100%&amp;#39;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://nurfatimaj.shinyapps.io/shiny_leaflet_map/&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
